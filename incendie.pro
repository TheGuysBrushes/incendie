######################################################################
# Automatically generated by qmake (2.01a) lun. 9. nov. 11:09:46 2015
######################################################################

TEMPLATE = app
VERSION= 1.4.2

RC_FILE = incendie.rc

message()
message(Qt version: $$[QT_VERSION])

DESTDIR = $$PWD
message(The project will be installed in $$DESTDIR)

#The first step is to enable dependency tracking in the library itself. To do this you must tell qmake to save information about the library:
CONFIG += create_prl
#The second step in this process is to enable reading of this meta information in the applications that use the static library:
CONFIG += link_prl

# Instructions for debug or release mode
CONFIG(debug, debug|release) {
    TARGET = ../incendie/build/Debug/Incendie_debug
#    DLLDESTDIR += $$quote(rbuild/release-Windows)
    message("Compiling Debug mode")
} else {
    win32 { TARGET = ../incendie/build/last_release/bin/Incendie_"$$VERSION" }
    unix {  TARGET = ../last_release/bin/Incendie_"$$VERSION" }
    #DLLDESTDIR += $$quote(build/last_release)
    message("Compiling to $$TARGET then copy executable to Release Directories")

    # Copy executable in another directory
    win32   { QMAKE_POST_LINK +=  $$QMAKE_COPY $$system_path($$TARGET).exe  ..\incendie\build\last_release_dev_very_light\bin\Incendie_"$$VERSION".exe }
    unix  { QMAKE_POST_LINK +=  $$QMAKE_COPY $$system_path($$TARGET)      ../last_release_dev_very_light/bin/Incendie_"$$VERSION"
        # Create directory where executable is copy
        foldersTarget.target = create_folders
        foldersTarget.commands =  mkdir -p ../last_release_dev_very_light/bin
        QMAKE_EXTRA_TARGETS +=  foldersTarget
        PRE_TARGETDEPS +=   $$foldersTarget.target
    }
#    QMAKE_POST_LINK += copy /y system_path($$TARGET).exe ..\incendie\build\last_release_light\bin\Incendie_"$$VERSION".exe

#    lightTarget.target = lightExeCopy
#    lightTarget.commands = $$QMAKE_COPY system_path($$TARGET) ..\incendie\build\last_release_light\bin\Incendie_"$$VERSION"

    versionTarget.target = versioning
    versionTarget.commands = @echo VERSION : $$VERSION

    QMAKE_EXTRA_TARGETS +=  versionTarget lightTarget
    PRE_TARGETDEPS +=   $$versionTarget.target
#    POST_TARGETDEPS +=  $$lightTarget.target
}

DEPENDPATH += . Display Moteur TinyXML
INCLUDEPATH += ./Display ./Moteur
TRANSLATIONS =  incendie_fr.ts \
                incendie_de.ts \
                incendie_en.ts

QT += core gui widgets

#greaterThan(QT_MAJOR_VERSION, 5): QT += widgets

# edit the file Path-To-Qt-SDK\qt_static\mkspecs\win32-g+.conf and add the bold (with * ) marked stuff
CONFIG += c++11
QMAKE_CFLAGS_RELEASE = -Os -momit-leaf-frame-pointer
QMAKE_LFLAGS = -static-libgcc
win32{
    QMAKE_LFLAGS += -static
}

DEFINES= QT_STATIC_BUILD
#edit Path-To-Qt-SDK\qt_static\qmake\Makefile.win32-g++
LFLAGS = -static -static-libgcc
#edit Path-To-Qt-SDK\qt_static\src\3rdparty\webkit\WebKit.pri
#add 'CONFIG = staticlib* on the top
#CONFIG = staticlib*

# Input
HEADERS += debug.h \
           Display/firescreen.h \
           Display/firewidget.h \
           Display/fwelcome.h \
           Display/loadwindow.h \
           Display/windcircle.h \
           Display/windwidget.h \
           Moteur/actions.h \
           Moteur/arbre.h \
           Moteur/cellule.h \
           Moteur/cellulevide.h \
           Moteur/coordonnee.h \
           Moteur/essence.h \
           Moteur/foret.h \
           Moteur/loadprogress.h \
           Moteur/vent.h \
           TinyXML/tinystr.h \
           TinyXML/tinyxml.h

SOURCES += main.cpp \
           Display/firescreen.cpp \
           Display/firewidget.cpp \
           Display/fwelcome.cpp \
           Display/loadwindow.cpp \
           Display/windcircle.cpp \
           Display/windwidget.cpp \
           Moteur/arbre.cpp \
           Moteur/cellule.cpp \
           Moteur/coordonnee.cpp \
           Moteur/essence.cpp \
           Moteur/foret.cpp \
           Moteur/loadprogress.cpp \
           Moteur/vent.cpp \
           TinyXML/tinystr.cpp \
           TinyXML/tinyxml.cpp \
           TinyXML/tinyxmlerror.cpp \
           TinyXML/tinyxmlparser.cpp
