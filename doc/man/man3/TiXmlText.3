.TH "TiXmlText" 3 "Wed Apr 20 2016" "Incendie" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TiXmlText \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <tinyxml\&.h>\fP
.PP
Inherits \fBTiXmlNode\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBTiXmlText\fP (const char *initValue)"
.br
.ti -1c
.RI "\fBTiXmlText\fP (const \fBTiXmlText\fP &copy)"
.br
.ti -1c
.RI "\fBTiXmlText\fP & \fBoperator=\fP (const \fBTiXmlText\fP &base)"
.br
.ti -1c
.RI "virtual void \fBPrint\fP (FILE *cfile, int depth) const "
.br
.ti -1c
.RI "bool \fBCDATA\fP () const "
.br
.RI "\fIQueries whether this represents text using a CDATA section\&. \fP"
.ti -1c
.RI "void \fBSetCDATA\fP (bool _cdata)"
.br
.RI "\fITurns on or off a CDATA representation of text\&. \fP"
.ti -1c
.RI "virtual const char * \fBParse\fP (const char *p, \fBTiXmlParsingData\fP *data, TiXmlEncoding encoding)"
.br
.ti -1c
.RI "virtual const \fBTiXmlText\fP * \fBToText\fP () const "
.br
.RI "\fICast to a more defined type\&. Will return null not of the requested type\&. \fP"
.ti -1c
.RI "virtual \fBTiXmlText\fP * \fBToText\fP ()"
.br
.RI "\fICast to a more defined type\&. Will return null not of the requested type\&. \fP"
.ti -1c
.RI "virtual bool \fBAccept\fP (\fBTiXmlVisitor\fP *content) const "
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual \fBTiXmlNode\fP * \fBClone\fP () const "
.br
.RI "\fI[internal use] Creates a new Element and returns it\&. \fP"
.ti -1c
.RI "void \fBCopyTo\fP (\fBTiXmlText\fP *target) const "
.br
.ti -1c
.RI "bool \fBBlank\fP () const "
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBTiXmlElement\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
XML text\&. A text node can have 2 ways to output the next\&. 'normal' output and CDATA\&. It will default to the mode it was parsed from the XML file and you generally want to leave it alone, but you can change the output mode with \fBSetCDATA()\fP and query it with \fBCDATA()\fP\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "TiXmlText::TiXmlText (const char * initValue)\fC [inline]\fP"
Constructor for text element\&. By default, it is treated as normal, encoded text\&. If you want it be output as a CDATA text element, set the parameter _cdata to 'true' 
.SH "Member Function Documentation"
.PP 
.SS "bool TiXmlText::Accept (\fBTiXmlVisitor\fP * content) const\fC [virtual]\fP"
Walk the XML tree visiting this node and all of its children\&. 
.PP
Implements \fBTiXmlNode\fP\&.
.SS "void TiXmlText::Print (FILE * cfile, int depth) const\fC [virtual]\fP"
All TinyXml classes can print themselves to a filestream or the string class (\fBTiXmlString\fP in non-STL mode, std::string in STL mode\&.) Either or both cfile and str can be null\&.
.PP
This is a formatted print, and will insert tabs and newlines\&.
.PP
(For an unformatted stream, use the << operator\&.) 
.PP
Implements \fBTiXmlBase\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Incendie from the source code\&.
